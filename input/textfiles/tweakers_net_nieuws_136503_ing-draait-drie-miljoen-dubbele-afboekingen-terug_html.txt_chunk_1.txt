Paar keer paar jaar, hoogop, behoudens bugfixes. Betrouwbaarheid lijkt me veel belangrijker als weer die nieuwe feature. En, iedere wijzing die je maakt is een risco en kan het mislopen. • Conservatiever? Denk je echt dat anno 2018 ICT systemen op een 'ouderwetse' manier opgepakt kunnen worden? De complexiteit is ZO hoog met alle aan elkaar gerelateerde systemen, dat het onmogelijk is om er met een waterval-aanpak mee aan de slag te gaan. Agile werken betekent niet 'vlug vlug' zoals jij omschrijft, maar juist kwaliteit is (hoort) één van de vastgestelde pilaren te zijn. Kijk eens naar dit plaatje:  Het is niet de Way Of Working die fouten veroorzaakt, maar de complexiteit. Agile werken is IMHO de enige oplossing daarvoor. Helaas hebben ze het bij ons (Enexis) ook nog niet begrepen, en roepen veel managers (ja, managers natuurlijk) dat projectmatig werken en waterval nog prima kunnen, en tenminste geen ophef bij de business oplevert... Zucht. • Er is niets mis met waterfall werken hoor. Juist in complexe en/of kritische omgevingen kan dit bepaalde zekerheden opleveren. Het is prima om van geval tot geval te bekijken welke methodiek is. Zoals iedere development methodiek kun je deze goed en slecht uitvoeren. Agile zelf is geen wondermiddel. • Ik bedoel conservatiever in de benadering. Ik denk dat belangrijk is om te zeggen, rustig aan, wat vandaag niet hoeft kan morgen wel, ruim de tijd nemen, komt tijd komt raad, pom pom de dag komt wel om. Dat heeft volgens mij goede invloed op de kwaliteit naast natuurlijk de mensen die er aan werken. Ik denk bijvoorbeeld dat continuit van personeel een hoop helpt. Niet denken dat het ook wel in een ander land kan of door een ander bedrijf (outsourcing). Dat kwaliteit een van de sterke punten is van Agile, dat zegt mij niet zoveel, er wordt veel aan agile toegschreven waarbij de vraag is: wat is agile? Een synoniem voor scrum denk ik wel eens. Of dat ongelukkig manifesto? Want ik denk bijvoorbeeld dat het niet goed is dat 'opdrachtgever' door middel van de product owner leidend is geworden. Dat kan niet anders dan slecht voor de kwaliteit zijn, prioriteiten die meer op het functionele liggen in plaats van op de software. Wel denk ik, ik had beter een drie daagse scrum cursus kunnen doen dan een studie wiskunde/informatica. • Als je je niet wil inlezen is het makkelijk om een boel vage statements bij elkaar te graaien maar je zegt niet zo veel. Kort door de bocht is Scrum simpelweg een manier om een softwareproduct stukje bij beetje te bouwen. In plaats van grote langdurige trajecten zoals bij klassieke vormen, concentreer je je er als team er op om een beperkte set aan functionaliteit tegelijk te maken en die helemaal af te maken, klaar voor gebruik door de eindgebruiker. Dat wil zeggen dat je het ook gaat testen en gaat uitrollen naar een omgeving die ofwel productie is, ofwel goed genoeg op de productieomgeving lijkt. Verder ga je ook actief de functionaliteit met de eindgebruiker delen en bespreken zodat je eventuele feedback direct kan verwerken. Dat is de reden achter de bewering dat kwaliteit bij Agile ingebouwd is: het is onderdeel van het proces, want je gaat al in vroeg stadium dingen , integreren, testen en er gebruikersfeedback over verzamelen. Het feit dat alles zo snel moet bewegen heeft ook bepaalde gevolgen, bijvoorbeeld dat je snel een nieuwe versie ergens moet kunnen neerzetten (zodat je die kan testen en eventuele problemen gelijk kan fixen) en je zal iets moeten bedenken om te zorgen dat de functionaliteit die eerder gebouwd is, niet is omgevallen. Dit gedeelte wordt echter vaak achterwege gelaten (omdat men niet wil investeren in testautomatisering, of een willekeurige andere onzinreden...) en dan begint het gedoe. Dit alles om duidelijk te maken dat deze vage 'vlug vlug' sfeer die je toeschrijft aan Agile daar juist niet thuis hoort. Als je het Agile Manifesto leest en gelijk de Scrum Guide eens doorneemt dan zal het je hopelijk vrij snel duidelijk worden dat dat juist niet de bedoeling is. Dat neemt niet weg dat er een hoop bedrijven zijn die het verkeerd inzetten, of maar half inzetten en dan beslissen dat het dus nooit kan werken. Agile werken vereist een verandering van bedrijfscultuur en een verschuiving naar langetermijndenken, maar daar zijn veel bedrijven eigenlijk niet toe bereidt. • Dat is wat ik ook veel lees, het niet goed slagen van de scrum etc dat veel bedrijven het verkeerd inzetten, dus niet de ware agile beoefenen  uitoefenen. Stapsgewijs is niet zo gek, dat is wat je als softwareontwikkelaar al deed voordat scrum of agile nog maar bestonden. Je weet ongeveer waar het heen moet, je weet een beetje hoe dat moet gebeuren en al doende wordt het plaatje duidelijker. Je gooit wat weg, je herschrijft brokken en zo bouwt de software zich op.